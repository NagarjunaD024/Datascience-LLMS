

!pip install langchain
!pip install langchain-openai
!pip install langchainhub
!pip install google-search-results
!pip install langchain openai sqlalchemy
!pip install -U langchain-community

from langchain.agents.load_tools import load_tools
from langchain.tools import tool
from langchain_community.utilities.sql_database import SQLDatabase
from langchain_community.agent_toolkits.sql.base import create_sql_agent
from langchain_openai import ChatOpenAI
from typing import Union
import pandas as pd

from google.colab import drive, userdata,  output
drive.mount('/content/drive')

@tool
def convert_currency(USD_amount: float, currency: str) -> Union[float, str]:
    """ Converts an amount in US dollars to another currency.

    Args:
        USD_amount: amount in US dollars.
        currency: name of target currency (e.g., "Yen").

    Returns:
        input amount in target currency.
    """
    conversion_factors = {
            'Euro': 0.92,       # 1 USD = 0.92 EUR
            'Yen': 156.23,      # 1 USD = 156.23 JPY
            'Yuan': 7.24,       # 1 USD = 7.24 CNY
            'Pound': 0.79,      # 1 USD = 0.79 GBP
            'Won': 1364.55,     # 1 USD = 1364.55 KRW
            'Rupee': 83.28      # 1 USD = 83.28 INR
        }

    if currency not in conversion_factors:
        error_message = (
            f'Unknown currency: {currency}!'
            f'Use one of {conversion_factors.keys()}')
        return error_message

    conversion_factor = conversion_factors[currency]
    converted_amount = USD_amount * conversion_factor
    return converted_amount

if __name__ == '__main__':

  """
  for Script Invoking from command line with argparse ex- python3 langchain_sql_agents_withfunction.py serpapi_api_key '/content/drive/My Drive/Colab Notebooks/DataScience+GPT/Data/structured_data/games.db'

                                                          'What revenue was generated by computer games in 2015 ? How much is it in euros?'
  """

    parser = argparse.ArgumentParser()
    parser.add_argument('serpaikey', type=str, help='SERP API access key')
    parser.add_argument('dbpath', type=str, help='Path to SQLite database')
    parser.add_argument('question', type=str, help='A question to answer')
    args = parser.parse_args()

    llm = ChatOpenAI(temperature=0, model='gpt-4o')
    db = SQLDatabase.from_uri(f'sqlite:///{args.dbpath}')
    extra_tools = load_tools(
        ['serpapi'], serpapi_api_key=args.serpaikey, llm=llm)
    extra_tools.append(convert_currency)

    agent = create_sql_agent(
        llm=llm, db=db, verbose=True,
        agent_type='openai-tools',
        extra_tools=extra_tools)
    agent.invoke({'input':args.question})